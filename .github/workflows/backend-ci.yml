name: Backend CI

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: agriplatform
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - '5432:5432'
        options: >-
          --health-cmd="pg_isready -U postgres -d agriplatform" 
          --health-interval=10s --health-timeout=5s --health-retries=5
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Django checks and migrations
        env:
          DJANGO_SETTINGS_MODULE: agriplatform.settings.test
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/agriplatform
        run: |
          python manage.py check --deploy --fail-level WARNING || true
          python manage.py migrate --noinput

      - name: Run tests
        env:
          DJANGO_SETTINGS_MODULE: agriplatform.settings.test
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/agriplatform
        run: |
          python manage.py test --verbosity 2

